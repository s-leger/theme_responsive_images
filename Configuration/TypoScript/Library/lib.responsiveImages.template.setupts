#####################################
## Handle template layouts
#####################################

# Available width of template layout

# FluidTemplate vars : 
# @ col_xs, sm, md, lg, xl : integer, number of columns 
# @ fluid : boolean, set to 1 on layouts without .container   

# Behiavour of breakpoints
# fluid -> make image size the screen size max for the breakpoint
# fixed -> make image size the width of container for current breakpoint
lib.responsiveImages.template{
    
    width_template = COA
    width_template {
        10 = TEXT
        10.value = (
        
        20 = TEXT
        
        30 = TEXT
        30.value = +{$plugin.lef_bootstrap_theme.gutter})/{$plugin.lef_bootstrap_theme.columns}*
        
        40 = TEXT
        
        stdWrap.override.cObject = COA
        stdWrap.override.cObject {
            10 = TEXT
            10.value = (
            
            20  = TEXT
            
            30  = TEXT
            30.value = +{$plugin.lef_bootstrap_theme.gutter})/{$plugin.lef_bootstrap_theme.columns}*
            
            40 = TEXT
            
            stdWrap.if{
                isLessThan.field = fluid 
                isLessThan.ifEmpty = 0                
                value = 1
                negate = 1
            }
        }
    }
    
    registerWidth = LOAD_REGISTER
    registerWidth {
        
        registerDepthTest{
        	cObject = TEXT
        	cObject.value = 0
        }
        
        
        # Container behiavour   
        fluid{
            cObject = TEXT
            cObject{
                value = 0
                override.field = fluid
            }
        }
        
        # Number of columns, auto propagate from lower to bigger
        
        columns_xs{
            cObject = TEXT
            cObject{
                value = {$plugin.lef_bootstrap_theme.columns}
                override.field = col_xs
            }
        }
        columns_sm{
            cObject = TEXT
            cObject{
                data = register:columns_xs
                override.field = col_sm
            }
        }
        columns_md{
            cObject = TEXT
            cObject{
                data = register:columns_sm
                override.field = col_md
            }
        }
        columns_lg{
            cObject = TEXT
            cObject{
                data = register:columns_md
                override.field = col_lg
            }
        }
        columns_xl{
            cObject = TEXT
            cObject{
                data = register:columns_lg
                override.field = col_xl
            }
        }    
        
        # Available width
        width_xxs {
            cObject < lib.responsiveImages.template.width_template
            cObject{
                
                20.value = {$plugin.lef_bootstrap_theme.container.xs}
                40.data = register:columns_xs
                stdWrap.override.cObject {
                    20.value = {$plugin.lef_bootstrap_theme.container.xs}
                    40.data = register:columns_xs
                    stdWrap >
                }
            }
            prioriCalc = 1
        }
        
        width_xs {
            cObject < lib.responsiveImages.template.width_template
            cObject{
                20.value = {$plugin.lef_bootstrap_theme.container.xs}
                40.data = register:columns_xs
                stdWrap.override.cObject{
                    20.value = {$plugin.lef_bootstrap_theme.container.sm}
                    40.data = register:columns_xs
                    stdWrap.if.isFalse = {$plugin.lef_bootstrap_theme.fluid.xs}
                }
            }
            prioriCalc = 1
        }
        
        width_sm {
            cObject < lib.responsiveImages.template.width_template
            cObject{
                20.value = {$plugin.lef_bootstrap_theme.container.sm}
                40.data = register:columns_sm
                stdWrap.override.cObject{
                    20.value = {$plugin.lef_bootstrap_theme.container.md}
                    40.data = register:columns_sm
                    stdWrap.if.isFalse = {$plugin.lef_bootstrap_theme.fluid.sm}
                }
            }
            prioriCalc = 1
        }    
        
        width_md {
            cObject < lib.responsiveImages.template.width_template
            cObject{
                20.value = {$plugin.lef_bootstrap_theme.container.md}
                40.data = register:columns_md
                
                stdWrap.override.cObject {
                    20.value = {$plugin.lef_bootstrap_theme.container.lg}
                    40.data = register:columns_md
                    stdWrap.if.isFalse = {$plugin.lef_bootstrap_theme.fluid.md}
                }   
            }
            prioriCalc = 1
        }
        
        width_lg {
            cObject < lib.responsiveImages.template.width_template
            cObject{
                20.value = {$plugin.lef_bootstrap_theme.container.lg}
                40.data = register:columns_lg    
                
                stdWrap.override.cObject {
                    20.value= {$plugin.lef_bootstrap_theme.container.xl}
                    40.data = register:columns_lg
                    stdWrap.if.isFalse = {$plugin.lef_bootstrap_theme.fluid.lg}
                    
                }
            }
            prioriCalc = 1
        }
        
        width_xl {
            cObject < lib.responsiveImages.template.width_template
            cObject{
                20.value = {$plugin.lef_bootstrap_theme.container.xl}
                40.data = register:columns_xl
                
                stdWrap.override.cObject {
                    20.value = {$plugin.lef_bootstrap_theme.container.xxl}
                    40.data = register:columns_xl    
                    stdWrap.if.isFalse = {$plugin.lef_bootstrap_theme.fluid.xl}
                    
                }
            }
            prioriCalc = 1
        }
    }
    
}    
# Restore registers
lib.responsiveImages.restore = RESTORE_REGISTER

lib.content.main {
    10 = < lib.responsiveImages.template.registerWidth
    
    15 < lib.responsiveImages.debug
    15.10.value = Template:
    
    100 = < lib.responsiveImages.restore
}

lib.content.feature{
    10  = < lib.responsiveImages.template.registerWidth 
    100 = < lib.responsiveImages.restore
}

lib.content.extended{
    10  = < lib.responsiveImages.template.registerWidth 
    100 = < lib.responsiveImages.restore
}